// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/versions/": {
            "get": {
                "description": "Retrieves the list of all version JSON objects from the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Versions"
                ],
                "summary": "Get all versions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Version"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new version. Expects a JSON object in the request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Versions"
                ],
                "summary": "Create a new version",
                "parameters": [
                    {
                        "description": "Version information",
                        "name": "version",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Version"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Version"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/versions/entry/": {
            "delete": {
                "description": "Deletes all versions associated with a specific Entry ID.",
                "tags": [
                    "Versions"
                ],
                "summary": "Deletes all versions by the Entry ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entry ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "EntryID is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "No versions found for the given entry ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to delete associated comments",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/versions/health": {
            "get": {
                "description": "Checks if the service is up",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/versions/search": {
            "get": {
                "description": "Search for versions using various query parameters. You can search by content, editor, createdAt, or entryID. All parameters are optional and can be combined.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Versions"
                ],
                "summary": "Search versions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Partial content to search for (case-insensitive)",
                        "name": "content",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Editor to search for",
                        "name": "editor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Creation date (YYYY-MM-DD)",
                        "name": "createdAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Entry ID to search for",
                        "name": "entryID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Version"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/versions/{id}": {
            "get": {
                "description": "Retrieves a version by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Versions"
                ],
                "summary": "Get a version by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Version ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Version"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Version not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a version by its ID. Expects a JSON object in the request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Versions"
                ],
                "summary": "Update a version by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Version ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Updated version information",
                        "name": "version",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Version"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Version"
                        }
                    },
                    "400": {
                        "description": "Invalid ID or request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Version not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a version by its ID.",
                "tags": [
                    "Versions"
                ],
                "summary": "Delete a version by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Version ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Version not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Version": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "editor": {
                    "type": "string"
                },
                "entry_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8004",
	BasePath:         "/api/versions",
	Schemes:          []string{},
	Title:            "Version Service API",
	Description:      "API documentation for the Version Service.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
